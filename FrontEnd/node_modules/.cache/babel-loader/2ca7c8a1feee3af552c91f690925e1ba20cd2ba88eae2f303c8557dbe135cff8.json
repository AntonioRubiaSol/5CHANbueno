{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio.Rubia\\\\Documents\\\\5CHAN\\\\5chan\\\\src\\\\components\\\\PostBoard\\\\PostBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PostCard from '../PostCard/PostCard';\nimport './PostBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostBoard(props) {\n  _s();\n  const categoryBoard = props.category;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:9991/\").then(res => res.json()).then(result => {\n      setPosts(result);\n    });\n  }, []);\n  if (categoryBoard === \"Question\" && posts.map(post => post.category) === categoryBoard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryContainer\",\n      bg: \"light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [props.category, /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"material-symbols-outlined\",\n          children: \"question_mark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n        children: [\"title:\", posts.title, \"category:\", posts.category, \"message:\", posts.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  } else if (categoryBoard === \"Suggestion\" && posts.map(post => post.category) === categoryBoard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryContainer\",\n      bg: \"light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [props.category, /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"material-symbols-outlined\",\n          children: \"speaker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n        children: [\"title:\", posts.title, \"category:\", posts.category, \"message:\", posts.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  } else if (categoryBoard === \"Clarification\" && posts.map(post => post.category) === categoryBoard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categoryContainer\",\n      bg: \"light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [props.category, /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"material-symbols-outlined\",\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(PostCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(PostBoard, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostBoard;\nvar _c;\n$RefreshReg$(_c, \"PostBoard\");","map":{"version":3,"names":["React","useState","useEffect","PostCard","PostBoard","props","categoryBoard","category","posts","setPosts","fetch","then","res","json","result","map","post","title","message"],"sources":["C:/Users/Antonio.Rubia/Documents/5CHAN/5chan/src/components/PostBoard/PostBoard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PostCard from '../PostCard/PostCard';\r\nimport './PostBoard.css';\r\n\r\nexport default function PostBoard(props) {\r\n    const categoryBoard = props.category;\r\n    const [posts, setPosts] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:9991/\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                setPosts(result);\r\n            })\r\n    }, [])\r\n\r\n\r\n    if (categoryBoard === \"Question\" && posts.map((post) => post.category) === categoryBoard) {\r\n        return (\r\n            <div className=\"categoryContainer\" bg=\"light\">\r\n                <h1>{props.category}<span class=\"material-symbols-outlined\">question_mark</span></h1>\r\n                <PostCard>\r\n                    title:{posts.title}\r\n                    category:{posts.category}\r\n                    message:{posts.message}\r\n                </PostCard>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    else if (categoryBoard === \"Suggestion\" && posts.map((post) => post.category) === categoryBoard) {\r\n        return (\r\n            <div className=\"categoryContainer\" bg=\"light\">\r\n                <h1>{props.category}<span class=\"material-symbols-outlined\">speaker</span></h1>\r\n                <PostCard>\r\n                    title:{posts.title}\r\n                    category:{posts.category}\r\n                    message:{posts.message}\r\n                </PostCard>\r\n            </div>\r\n        );\r\n    }\r\n    else if (categoryBoard === \"Clarification\" && posts.map((post) => post.category) === categoryBoard) {\r\n        return (\r\n            <div className=\"categoryContainer\" bg=\"light\"><h1>{props.category}<span class=\"material-symbols-outlined\">edit</span></h1>\r\n                <PostCard>\r\n\r\n                </PostCard>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,iBAAiB;AAAC;AAEzB,eAAe,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EACrC,MAAMC,aAAa,GAAGD,KAAK,CAACE,QAAQ;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAItCC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,wBAAwB,CAAC,CAC1BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,MAAM,IAAK;MACdL,QAAQ,CAACK,MAAM,CAAC;IACpB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIR,aAAa,KAAK,UAAU,IAAIE,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACT,QAAQ,CAAC,KAAKD,aAAa,EAAE;IACtF,oBACI;MAAK,SAAS,EAAC,mBAAmB;MAAC,EAAE,EAAC,OAAO;MAAA,wBACzC;QAAA,WAAKD,KAAK,CAACE,QAAQ,eAAC;UAAM,KAAK,EAAC,2BAA2B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACrF,QAAC,QAAQ;QAAA,qBACEC,KAAK,CAACS,KAAK,eACRT,KAAK,CAACD,QAAQ,cACfC,KAAK,CAACU,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACf;IAAA;MAAA;MAAA;MAAA;IAAA,QAET;EAEd,CAAC,MACI,IAAIZ,aAAa,KAAK,YAAY,IAAIE,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACT,QAAQ,CAAC,KAAKD,aAAa,EAAE;IAC7F,oBACI;MAAK,SAAS,EAAC,mBAAmB;MAAC,EAAE,EAAC,OAAO;MAAA,wBACzC;QAAA,WAAKD,KAAK,CAACE,QAAQ,eAAC;UAAM,KAAK,EAAC,2BAA2B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC/E,QAAC,QAAQ;QAAA,qBACEC,KAAK,CAACS,KAAK,eACRT,KAAK,CAACD,QAAQ,cACfC,KAAK,CAACU,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACf;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAEd,CAAC,MACI,IAAIZ,aAAa,KAAK,eAAe,IAAIE,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACT,QAAQ,CAAC,KAAKD,aAAa,EAAE;IAChG,oBACI;MAAK,SAAS,EAAC,mBAAmB;MAAC,EAAE,EAAC,OAAO;MAAA,wBAAC;QAAA,WAAKD,KAAK,CAACE,QAAQ,eAAC;UAAM,KAAK,EAAC,2BAA2B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACtH,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAEd;AACJ;AAAC,GAjDuBH,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}